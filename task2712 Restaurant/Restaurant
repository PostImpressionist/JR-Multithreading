package com.javarush.task.task27.task2712;

import com.javarush.task.task27.task2712.kitchen.Cook;
import com.javarush.task.task27.task2712.kitchen.Order;
import com.javarush.task.task27.task2712.kitchen.Waiter;
import com.javarush.task.task27.task2712.statistic.StatisticManager;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.LinkedBlockingQueue;

public class Restaurant {

    private static final int ORDER_CREATING_INTERVAL = 100;
    private static final LinkedBlockingQueue<Order> ORDER_QUEUE = new LinkedBlockingQueue<>();


    public static void main(String[] args) {
        List<Tablet> tablets = new ArrayList<>();
        for (int i = 1; i < 6; i++) {
            Tablet t = new Tablet(i);
            t.setQueue(ORDER_QUEUE);
            tablets.add(t);
        }
        
        Cook cook1 = new Cook("Amigo");
        cook1.setQueue(ORDER_QUEUE);
        Thread cook1Thread = new Thread(cook1);
        cook1Thread.setDaemon(true);

        Cook cook2 = new Cook("Avatar");
        cook2.setQueue(ORDER_QUEUE);
        Thread cook2Thread = new Thread(cook2);
        cook2Thread.setDaemon(true);



        Waiter waiter = new Waiter();

        cook1.addObserver(waiter);
        cook2.addObserver(waiter);


        cook1Thread.start();
        cook2Thread.start();
        Thread orderGenerator = new Thread(new RandomOrderGeneratorTask(tablets,ORDER_CREATING_INTERVAL));
        orderGenerator.start();
        try {
            Thread.sleep(1000);
            orderGenerator.interrupt();
            orderGenerator.join();
            Thread.sleep(1000);
        } catch (InterruptedException ignore) {
        }
        //while(orderGenerator.isInterrupted()) orderGenerator.interrupt();

/*
        tablet.createOrder();
        tablet.createOrder();
        tablet.createOrder();
        tablet.createOrder();*/

        DirectorTablet directorTablet = new DirectorTablet();
        directorTablet.printAdvertisementProfit();
        directorTablet.printCookWorkloading();
        directorTablet.printActiveVideoSet();
        directorTablet.printArchivedVideoSet();
    }
}
